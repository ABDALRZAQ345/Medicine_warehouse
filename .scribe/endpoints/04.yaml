name: Order
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/orders
    metadata:
      groupName: Order
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Make a new Order'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {access_token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      medicines:
        name: medicines
        description: ''
        required: true
        example:
          - []
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'medicines[].id':
        name: 'medicines[].id'
        description: ''
        required: true
        example: provident
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'medicines[].quantity':
        name: 'medicines[].quantity'
        description: 'Must be at least 1.'
        required: true
        example: 81
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      medicines:
        -
          id: provident
          quantity: 81
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
          "message": "Order placed successfully",
          "order": {
          "total_price": 23432,
          "status": "repairing",
          "payment_status": "unpaid",
          "orderer_id": 6,
          "updated_at": "2024-09-25T12:29:54.000000Z",
          "created_at": "2024-09-25 12:09:54",
          "id": 1
          }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
          "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
          "message": "User does not have the right role ."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          if one of the medicines not found
          {
          "message": "The selected medicines.0.id is invalid.",
          "errors": {
          "medicines.0.id": [
          "The selected medicines.0.id is invalid."
          ]
          }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          if no medicines passed
          {
          "message": "The medicines field is required.",
          "errors": {
          "medicines": [
          "The medicines field is required."
          ]
          }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/orders
    metadata:
      groupName: Order
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Showing the user 's orders and if he is admin showing all orders"
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {access_token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": [
          {
          "id": 1,
          "orderer_id": 6,
          "total_price": 23432,
          "status": "repairing",
          "payment_status": "unpaid",
          "created_at": "2024-09-25 12:09:54",
          "updated_at": "2024-09-25T12:29:54.000000Z"
          }
          ],
          "links": {
          "first": "http://127.0.0.1:8000/api/orders?page=1",
          "last": "http://127.0.0.1:8000/api/orders?page=1",
          "prev": null,
          "next": null
          },
          "meta": {
          "current_page": 1,
          "from": 1,
          "last_page": 1,
          "links": [
          {
          "url": null,
          "label": "&laquo; Previous",
          "active": false
          },
          {
          "url": "http://127.0.0.1:8000/api/orders?page=1",
          "label": "1",
          "active": true
          },
          {
          "url": null,
          "label": "Next &raquo;",
          "active": false
          }
          ],
          "path": "http://127.0.0.1:8000/api/orders",
          "per_page": 15,
          "to": 1,
          "total": 1
          }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
          "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/orders/{id}'
    metadata:
      groupName: Order
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'update  a status for a specific  Order'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {access_token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the order.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      status:
        name: status
        description: 'Must be between 0 and 2.'
        required: true
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      payment_status:
        name: payment_status
        description: ''
        required: true
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      status: 0
      payment_status: true
    fileParameters: []
    responses:
      -
        status: 401
        content: |-
          {
          "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
          "message": "User does not have the right role ."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
          "message": " not found."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
          "message": "The status field must be between 0 and 2. (and 1 more error)",
          "errors": {
          "status": [
          "The status field must be between 0 and 2."
          ],
          "payment_status": [
          "The payment status field must be true or false."
          ]
          }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
